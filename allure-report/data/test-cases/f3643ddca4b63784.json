{"uid":"f3643ddca4b63784","name":"Проверка создания пользователя","fullName":"tests.test_user_api.TestUserApi#test_post_user","historyId":"c4fe98354d9347bca1d8a7519019dcfc","time":{"start":1714327788223,"stop":1714327789778,"duration":1555},"status":"failed","statusMessage":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774826}","statusTrace":"self = <tests.test_user_api.TestUserApi object at 0x106bdc7c0>, logger_test = <Logger testing (INFO)>\n\n    @allure.title('Проверка создания пользователя')\n    def test_post_user(self, logger_test):\n        user_api = UserApi(logger=logger_test)\n        body = {\"id\": 0,\n                \"username\": \"ivan_test\",\n                \"firstName\": \"Иван\",\n                \"lastName\": \"Иванов\",\n                \"email\": \"test@test.ru\",\n                \"password\": \"ivanov_ivan_password\",\n                \"phone\": \"+7(901)111-11-11\",\n                \"userStatus\": 0}\n        response = user_api.post_user(body=body)\n        check.status_code(200, response)\n        new_user_id = 9223372036854774791  # новый пользователь всегда создается с этим id\n        body['id'] = new_user_id\n        get_response = user_api.get_user_by_username('ivan_test')\n        check.status_code(200, get_response)\n>       check.check_json(body, get_response.json())\n\nbody       = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774791, 'lastName': 'Иванов', ...}\nget_response = <Response [200]>\nlogger_test = <Logger testing (INFO)>\nnew_user_id = 9223372036854774791\nresponse   = <Response [200]>\nself       = <tests.test_user_api.TestUserApi object at 0x106bdc7c0>\nuser_api   = <api_testing.user_api.UserApi object at 0x1091b0d60>\n\ntests/test_user_api.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774791, 'lastName': 'Иванов', ...}\nactual = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774826, 'lastName': 'Иванов', ...}\n\n    def check_json(expected, actual):\n        with allure.step('Сравнение содержимого ответа запроса с ожидаемыми данными'):\n>           assert expected == actual, \\\n                (\"Ответ запроса отличается от ожидаемого\\n\"\n                 f\"разница: {jsondiff.diff(expected, actual)}\")\nE           AssertionError: Ответ запроса отличается от ожидаемого\nE           разница: {'id': 9223372036854774826}\n\nactual     = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774826, 'lastName': 'Иванов', ...}\nexpected   = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774791, 'lastName': 'Иванов', ...}\n\nhelpers/checker.py:38: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":11,"retriesStatusChange":true,"beforeStages":[{"name":"logger_test","time":{"start":1714327763540,"stop":1714327763540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"url","time":{"start":1714327763540,"stop":1714327763540,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774826}","statusTrace":"self = <tests.test_user_api.TestUserApi object at 0x106bdc7c0>, logger_test = <Logger testing (INFO)>\n\n    @allure.title('Проверка создания пользователя')\n    def test_post_user(self, logger_test):\n        user_api = UserApi(logger=logger_test)\n        body = {\"id\": 0,\n                \"username\": \"ivan_test\",\n                \"firstName\": \"Иван\",\n                \"lastName\": \"Иванов\",\n                \"email\": \"test@test.ru\",\n                \"password\": \"ivanov_ivan_password\",\n                \"phone\": \"+7(901)111-11-11\",\n                \"userStatus\": 0}\n        response = user_api.post_user(body=body)\n        check.status_code(200, response)\n        new_user_id = 9223372036854774791  # новый пользователь всегда создается с этим id\n        body['id'] = new_user_id\n        get_response = user_api.get_user_by_username('ivan_test')\n        check.status_code(200, get_response)\n>       check.check_json(body, get_response.json())\n\nbody       = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774791, 'lastName': 'Иванов', ...}\nget_response = <Response [200]>\nlogger_test = <Logger testing (INFO)>\nnew_user_id = 9223372036854774791\nresponse   = <Response [200]>\nself       = <tests.test_user_api.TestUserApi object at 0x106bdc7c0>\nuser_api   = <api_testing.user_api.UserApi object at 0x1091b0d60>\n\ntests/test_user_api.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexpected = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774791, 'lastName': 'Иванов', ...}\nactual = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774826, 'lastName': 'Иванов', ...}\n\n    def check_json(expected, actual):\n        with allure.step('Сравнение содержимого ответа запроса с ожидаемыми данными'):\n>           assert expected == actual, \\\n                (\"Ответ запроса отличается от ожидаемого\\n\"\n                 f\"разница: {jsondiff.diff(expected, actual)}\")\nE           AssertionError: Ответ запроса отличается от ожидаемого\nE           разница: {'id': 9223372036854774826}\n\nactual     = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774826, 'lastName': 'Иванов', ...}\nexpected   = {'email': 'test@test.ru', 'firstName': 'Иван', 'id': 9223372036854774791, 'lastName': 'Иванов', ...}\n\nhelpers/checker.py:38: AssertionError","steps":[{"name":"Проверка status_code ответа","time":{"start":1714327788872,"stop":1714327788872,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Выполнить запрос GET https://petstore.swagger.io/v2/user/ivan_test, headers={'Content-Type': 'text', 'accept_header': 'json'}, params=None","time":{"start":1714327788872,"stop":1714327789776,"duration":904},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Проверка status_code ответа","time":{"start":1714327789776,"stop":1714327789776,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Сравнение содержимого ответа запроса с ожидаемыми данными","time":{"start":1714327789776,"stop":1714327789776,"duration":0},"status":"failed","statusMessage":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774826}\n","statusTrace":"  File \"/Users/annapogrebnik/PycharmProjects/pythonProject1/otus_test_project/helpers/checker.py\", line 38, in check_json\n    assert expected == actual, \\\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"6a18ec42a3be7505","name":"log","source":"6a18ec42a3be7505.txt","type":"text/plain","size":1921}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_user_api"},{"name":"subSuite","value":"TestUserApi"},{"name":"host","value":"d45763e349a4"},{"name":"thread","value":"98013-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_user_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"8a82d34ea79e2f2c","status":"broken","statusDetails":"TypeError: UserApi.__init__() missing 1 required positional argument: 'logger'","time":{"start":1714327507487,"stop":1714327507487,"duration":0}},{"uid":"adc6582a7d86cfa","status":"passed","time":{"start":1714321462862,"stop":1714321464186,"duration":1324}},{"uid":"2fb56b8121a8fdf","status":"failed","statusDetails":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774791}","time":{"start":1714321392926,"stop":1714321394195,"duration":1269}},{"uid":"506676f753468fee","status":"failed","statusDetails":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774791}","time":{"start":1714321353789,"stop":1714321355000,"duration":1211}},{"uid":"b697d0dec5c7107","status":"failed","statusDetails":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774791}","time":{"start":1714321344073,"stop":1714321345170,"duration":1097}},{"uid":"d09d23be22cb80f5","status":"failed","statusDetails":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774791}","time":{"start":1714321310974,"stop":1714321312359,"duration":1385}},{"uid":"843e3c5f0124e6c9","status":"failed","statusDetails":"AssertionError: Ответ запроса отличается от ожидаемого\nразница: {'id': 9223372036854774791}","time":{"start":1714321279058,"stop":1714321280253,"duration":1195}},{"uid":"162c68cd6aa6710b","status":"passed","time":{"start":1714321243880,"stop":1714321245016,"duration":1136}},{"uid":"66470b0b1c1baa5e","status":"passed","time":{"start":1714321191289,"stop":1714321192304,"duration":1015}},{"uid":"22013ee47304a9ee","status":"passed","time":{"start":1714321145294,"stop":1714321146064,"duration":770}},{"uid":"9aadad273beb3923","status":"passed","time":{"start":1714321132695,"stop":1714321133469,"duration":774}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f3643ddca4b63784.json","parameterValues":[]}